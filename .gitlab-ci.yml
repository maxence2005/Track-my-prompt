stages:
    - build
    - release

variables:
    FLATPAK_BUNDLE: "TrackMyPrompt.flatpak"
    FLATPAK_MANIFEST: "installer/flatpak/manifest.json"
    BUILD_DIR: "flatpak-build"
    REPO_DIR: "flatpak-repo"
    WINDOWS_INSTALLER: "installer/windows/compile.sh"
    WINDOWS_BUNDLE: "TrackMyPromptInstaller.exe"

build-windows:
    image: debian:bookworm
    stage: build
    tags:
        - windows-builder
    before_script:
        - dpkg --add-architecture i386
        - apt-get update
        - apt install -y python3 python3-pip curl git wine64 unzip xvfb wine32:i386
    script:
        - echo "Build your app"
        - echo "${CI_JOB_ID}" > CI_JOB_ID_WINDOWS
        - chmod +x $WINDOWS_INSTALLER
        - ./$WINDOWS_INSTALLER
        - mv installer/windows/$WINDOWS_BUNDLE .
        - echo "Windows build completed"
    artifacts:
        paths:
            - CI_JOB_ID_WINDOWS
            - $WINDOWS_BUNDLE
        expire_in: never
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'

build-flatpak:
    image: debian:bookworm
    stage: build
    tags:
        - flatpak-builder
    before_script:
        - apt-get update && apt-get install -y flatpak flatpak-builder wget xz-utils python3
        - flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        - flatpak install -y flathub org.freedesktop.Sdk//24.08
        - flatpak install -y flathub org.freedesktop.Platform//24.08
    script:
        - echo "Build your app"
        - echo "${CI_JOB_ID}" > CI_JOB_ID_FLATPAK
        - flatpak-builder --repo=$REPO_DIR --force-clean $BUILD_DIR $FLATPAK_MANIFEST
        - flatpak build-bundle $REPO_DIR $FLATPAK_BUNDLE iut.sae.TrackMyPrompt
    artifacts:
        paths:
            - CI_JOB_ID_FLATPAK
            - $FLATPAK_BUNDLE
        expire_in: never
    cache:
        key: flatpak-cache
        paths:
            - $HOME/.local/share/flatpak
            - $BUILD_DIR
            - $REPO_DIR
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'

release:
    stage: release
    needs:
        - job: build-flatpak
        - job: build-windows
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    before_script:
        - export TAG_NAME="release_$CI_COMMIT_SHORT_SHA"
        - export TAG_MSG="Release for commit $CI_COMMIT_SHORT_SHA"

        - echo "Generated tag -> $TAG_NAME"
        - git config --global user.email "ci@example.com"
        - git config --global user.name "CI Bot"
        - export REPO_URL_WITH_TOKEN=$(echo "$CI_REPOSITORY_URL" | sed "s/gitlab-ci-token:[^@]*/gitlab-ci-token:${CI_PUSH_TOKEN}/")
        - git remote set-url origin "$REPO_URL_WITH_TOKEN"
        - git tag -a $TAG_NAME -m "$TAG_MSG"
        - git push origin "$TAG_NAME"
    script:
        - CI_JOB_FLATPAK=$(cat CI_JOB_ID_FLATPAK)
        - CI_JOB_WINDOWS=$(cat CI_JOB_ID_WINDOWS)
        - release-cli create --name "Release $CI_COMMIT_SHORT_SHA" --tag-name "$TAG_NAME" --ref "$CI_COMMIT_SHA" --assets-link "{\"name\":\"Flatpak Installer\",\"url\":\"https://forgens.univ-ubs.fr/gitlab/e2300056/track-my-prompt/-/jobs/$CI_JOB_FLATPAK/artifacts/raw/$FLATPAK_BUNDLE?inline=false\",\"link_type\":\"other\"}" --assets-link "{\"name\":\"Windows Installer\",\"url\":\"https://forgens.univ-ubs.fr/gitlab/e2300056/track-my-prompt/-/jobs/$CI_JOB_WINDOWS/artifacts/raw/$WINDOWS_BUNDLE?inline=false\",\"link_type\":\"other\"}"
    rules:
        - if: '$CI_COMMIT_BRANCH == "main"'
